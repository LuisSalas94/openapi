openapi: 3.0.3
info:
  title: FernandoShop Products APIs Definition
  description: |
     # About Us
     ***FernandoShop*** is a open market product selling company. Any website can list our products by using our _APIs_. Shipping & other logistics will be taken care by us. You will get an `Affiliate commision` for selling our products.
     # Categories suported
      - Mobiles
        - Apple
        - Samsung
        - Nokia
      - Laptops
      - Televisions
      - Headphones
  termsOfService: https://medium.com/@luisfernandosalasg
  x-custom-info:
    comment: Some comments
    authors:
      - name: Fernando Salas
        email: fernando@gmail.com
      - name: Ponky Salas
        email: ponky@gmail.com
  contact:
    name: API Support
    url: https://medium.com/@luisfernandosalasg
    email: luisfernandosalasg@gmail.com
  license:
    name: FernandoShop 2.0
    url: https://medium.com/@luisfernandosalasg 
  version: 0.0.1
externalDocs:
  description: External Documentation
  url: https://medium.com/@luisfernandosalasg
servers:
  - url: https://development.fernandoshop-sever.com/v1
    description: Development Server
  - url: https://staging.fernandoshop-sever.com/v1
    description: Staging Server
  - url: https://api.fernandoshop-sever.com/v1
    description: Production Server
  - url : https://{username}.sever.com:{port}/{version}
    variables:
      username:
        default: demo
        description: This value is assigned by the service provider.
      port:
        enum:
          - "8443"
          - "443"
        default: "8443"
      version:
        default: v1
tags:
  - name: Categories
    description: Categories-related operations
  - name: Product
    description: Products-related operations
  - name: Orders
    description: Orders-related operations
security:
 - BasicAuth: []
 - BearerAuth: []
 - ApiKeyAuth: []
 - oAuth2AuthCode:
    - read
    - write
    - admin
paths:
  /categories:
    get:
      tags:
        - Categories
      summary: List all categories
      description: Returns the list of categories supported by FernandoShop
      operationId: getCategories
      security:
        - BasicAuth: []
      parameters:
        - name: categoryId
          in: query
          schema:
           type: integer
           minimum: 100
           maximum: 1000
          examples:
            mobiles:
              value: 101
            laptops:
              value: 102
            headphones:
              value: 103
            televisions:
              value: 104
            
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                    - categoryId: 101
                      name: Mobiles
                    - categoryId: 102
                      name: Laptops
                    - categoryId: 103
                      name: Headphones
                    - categoryId: 104
                      name: Televisions
                single-category-data:
                  summary: Single category example data
                  value:
                    - categoryId: 101
                      name: Mobiles
        '500':
          $ref: "#/components/responses/InternalServerError"
                      
  /categories/{categoryId}:
    get:
      tags:
        - Categories
      summary: Return category details
      description: Returns categories details supported by FernandoShop
      operationId: getCategoryDetails
      security: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 102
      responses:
        '200':
          description: Return category details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '500':
          $ref: "#/components/responses/InternalServerError"
                    
  /products:
    get:
      tags:
        - Product
      summary: List all products
      description: Returns the list of products supported by FernandoShop
      operationId: getProducts
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            minimum: 0
            maximum: 100
          example: 94
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              examples:
                products-data:
                  summary: Products example data
                  value:
                    - productId: 101
                      name: Iphone 13 Pro
                      price: 999.99
                      categoryName: Mobiles
                      quantity: 96
                    - productId: 102
                      name: Samsung S22 Ultra
                      price: 899.99
                      categoryName: Mobiles
                      quantity: 121
                    - productId: 103
                      name: OnePlus 10 Pro 5G
                      price: 750.99
                      categoryName: Mobiles
                      quantity: 67
        '500':
          $ref: "#/components/responses/InternalServerError"
          
  /products/{productId}:
    get:
      tags:
        - Product
      summary: Return products details
      description: Returns products details from FernandoShop
      operationId: getProductDetails
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 100
          example: 67
      responses:
        '200':
          description: Return product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        '500':
          $ref: "#/components/responses/InternalServerError"
                    
  /orders:
    post:
      tags:
        - Orders
      summary: Create Order
      description: Post oder details to FernandoShop for processing and shipping
      operationId: saveOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
                 
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
          links:
            GetOrderByOrderId:
              $ref: '#/components/links/GetOrderByOrderId'
        '500':
          $ref: "#/components/responses/InternalServerError"
                    
    put:
      tags:
        - Orders
      summary: Update Order
      description: Update oder details to FernandoShop for processing and shipping
      operationId: updateOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '200':
          description: Order details updated successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
    
    delete:
      tags:
        - Orders
      summary: Delete Order
      description: Delete oder details to FernandoShop for processing and shipping
      operationId: deleteOrderDetail
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '204':
          description: Order details deleted successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
          
    get:
      tags:
        - Orders
      summary: Get order details
      description: Get order details from FernandoShop
      operationId: getOrderDetails  
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '200':
          description: Fetch order details successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        categoryName:
                          type: string
                        quantity:
                          type: integer
                  address:
                     $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
          
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get order details
      description: Get order details from FernandoShop
      operationId: getOrderDetailsUsingPathParam
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/orderIdPathParam"
      responses:
        '200':
          description: Fetch order details successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        categoryName:
                          type: string
                        quantity:
                          type: integer
                  address:
                     $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
components:
  parameters:
    orderIdQueryParam:
      name: orderId
      in: query
      required: true
      schema:
        type: integer
    orderIdPathParam:
      name: orderId
      in: path
      required: true
      schema:
        type: integer
        
  schemas:
  
    Address:
      type: object
      properties:
        addressline:
          type: string
        city:
          type: string
        state:
          type: string
          enum: 
            - California
            - Texas
            - Indiana
            - NewYork
        zipcode:
          type: string
        isOfficeAddress:
          type: boolean
      required: [addressline, city, state, zipcode]
    
    Product:
      type: object
      properties:
        productId:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
        categoryName:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date
          readOnly: true
        quantity:
          type: integer
          description: |
           ***Quantity*** represents `stock` value when this field is being sent by FernandoShop. Where as in the scenarios of consumer sending this field, it represents `number of product items` inside the order. Consumers are expected to handle the scenario of stopping the end user <u>*when the stock value is 0*</u>
           
    Category:
      type: object
      properties:
        categoryId:
          type: integer
        name:
          type: string
          
    Mobile:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            networkType:
              type: string
              enum:
                - 4G
                - 5G
          required: [networkType]
    
    Laptop:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            ram:
              type: string
              enum:
                - 8gb
                - 16gb
                - 32gb
          required: [ram]  
    
  responses:
    InternalServerError:
      description: | 
        An error occured while processing the request. Please contact support@fernandoshop.com
        
  links:
    GetOrderByOrderId:
      description: >
        The `orderId` value returned in the response can be used as input parameter in `GET/orders`.
      operationId: getProductDetails
      parameters:
        orderId: '$response.body#/orderId'
        
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    oAuth2AuthCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://medium.com/@luisfernandosalasg
          tokenUrl: https://medium.com/@luisfernandosalasg
          scopes:
            read: Read only access
            write: Read write access
            admin: Admin access
    
          
  
          
        
        
                                    
  
      
      
               
                    
              
            
          
          
                    
  
                  
        
      
        
                    
                  
          
                  
                  
                  
              
            
            
             
        
                
      
  
